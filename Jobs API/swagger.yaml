openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: http://localhost:3000/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - Auth
      summary: POST REGISTER
      operationId: POSTREGISTER
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/POSTREGISTERREQUEST'
              - example:
                  name: akorede
                  email: akorede@google.com
                  password: helloss
            example:
              name: akorede
              email: akorede@google.com
              password: helloss
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: POST LOGIN
      operationId: POSTLOGIN
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/POSTLOGINREQUEST'
              - example:
                  email: akorede@google.com
                  password: helloss
            example:
              email: akorede@google.com
              password: helloss
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: Create Jobs
      operationId: CreateJobs
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateJobsRequest'
              - example:
                  company: facebook
                  position: back-end developer
                  status: interview
            example:
              company: facebook
              position: back-end developer
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    get:
      tags:
      - Jobs
      summary: Get Jobs
      operationId: GetJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    get:
      tags:
      - Jobs
      summary: Get a Job
      operationId: GetaJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    patch:
      tags:
      - Jobs
      summary: Update a Job
      operationId: UpdateaJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateaJobRequest'
              - example:
                  company: Apple
                  position: ML ENGINEER
            example:
              company: Apple
              position: ML ENGINEER
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
    delete:
      tags:
      - Jobs
      summary: Delete a Job
      operationId: DeleteaJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
components:
  schemas:
    POSTREGISTERREQUEST:
      title: POSTREGISTERREQUEST
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: akorede
        email: akorede@google.com
        password: helloss
    POSTLOGINREQUEST:
      title: POSTLOGINREQUEST
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: akorede@google.com
        password: helloss
    CreateJobsRequest:
      title: CreateJobsRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: facebook
        position: back-end developer
        status: interview
    UpdateaJobRequest:
      title: UpdateaJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Apple
        position: ML ENGINEER
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: Auth
  description: ''
- name: Jobs
  description: ''